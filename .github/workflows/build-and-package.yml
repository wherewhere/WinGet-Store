name: build and package

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths:
      - '.github/workflows/build-and-package.yml'
      - 'WinGetStore**'
  workflow_dispatch:

jobs:
  build-and-test:

    name: build-and-package
    runs-on: windows-latest

    env:
      Solution_Name: WinGetStore.sln
      Project_Directory: WinGetStore/WinGetStore

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Decode the base 64 encoded pfx and save the Signing_Certificate
    - name: Decode the pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
        $certificatePath = Join-Path -Path $env:Project_Directory -ChildPath WinGetStore_TemporaryKey.pfx
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1
      with:
        msbuild-architecture: x64
        
    - name: Setup NuGet.exe
      uses: NuGet/setup-nuget@v1
    
    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: nuget restore $env:Solution_Name

    # Create the app package by building and packaging the Windows Application Packaging project
    - name: Create the app package
      run: msbuild $env:Solution_Name /p:AppxBundlePlatforms="$env:Appx_Bundle_Platforms" /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode /p:AppxBundle=$env:Appx_Bundle /p:AppxPackageDir="$env:Appx_Package_Dir" /p:AppxPackageSigningEnabled=true /p:PackageCertificateThumbprint="0CDF4A03E9BE9DD789894BB3C7AD3DEDECD9AB25" /p:PackageCertificateKeyFile=WinGetStore_TemporaryKey.pfx /p:PackageCertificatePassword="$env:Password"
      env:
        Appx_Bundle: Always
        Appx_Bundle_Platforms: x86|x64|ARM|ARM64
        Appx_Package_Build_Mode: SideloadOnly
        Appx_Package_Dir: AppxPackages\
        Configuration: Release
        Password: ${{ secrets.Password }}

    # Upload the MSIX package: https://github.com/marketplace/actions/upload-a-build-artifact
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: MSIX Package
        path: WinGetStore/WinGetStore/AppxPackages/**
